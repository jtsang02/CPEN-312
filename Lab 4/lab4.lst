                 -1   $MODDE0CV
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER 0 - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER 0 - HIGH BYTE
0000             24   DPL1   DATA  084H  ;DATA POINTER 1 - LOW BYTE
0000             25   DPH1   DATA  085H  ;DATA POINTER 1 - HIGH BYTE
0000             26   DPS    DATA  086H  ;DATA POINTER SELECT. DPH1, DPL1 active when DPS.0=1
0000             27   PCON   DATA  087H  ;POWER CONTROL
0000             28   TCON   DATA  088H  ;TIMER CONTROL
0000             29   TMOD   DATA  089H  ;TIMER MODE
0000             30   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             31   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             32   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             33   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             34   P1     DATA  090H  ;PORT 1
0000             35   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             36   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             37   P2     DATA  0A0H  ;PORT 2
0000             38   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             39   P3     DATA  0B0H  ;PORT 3
0000             40   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             41   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             42   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             43   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             44   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             45   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             46   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             47   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             48   ACC    DATA  0E0H  ;ACCUMULATOR
0000             49   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             50   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             51   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             52   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             53   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             54   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             55   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             56   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             57   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             58   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             59   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             60   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             61   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             62   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             63   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             64   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             65   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             66   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             67   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             68   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             69   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             70   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             71   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             72   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             73   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             74   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             75   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             76   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             77   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             78   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             79   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             80   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             81   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             82   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             83   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             84   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             85   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             86   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             87   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             88   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             89   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             90   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             91   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             92   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             93   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             94   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             95   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             96   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             97   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             98   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             99   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000            100   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000            101   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000            102   
0000            103   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            104   ; we have the following extra registers:
0000            105   
0000            106   HEX0   DATA  091H ; Zero turns the segment on
0000            107   HEX1   DATA  092H ; 
0000            108   HEX2   DATA  093H ; 
0000            109   HEX3   DATA  094H ; 
0000            110   HEX4   DATA  08EH ;
0000            111   HEX5   DATA  08FH ;
0000            112   HEX6   DATA  096H ;
0000            113   HEX7   DATA  097H ;
0000            114   
0000            115   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            116   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            117   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            118   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            119   
0000            120   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            121   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            122   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            123   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            124   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            125   SWB    DATA  095H ; Switches SW8 to SW15
0000            126   SWC    DATA  09EH ; Switches SW16 and SW17
0000            127   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            128   
0000            129   LCD_CMD   DATA 0D8H ;
0000            130   LCD_DATA  DATA 0D9H ;
0000            131   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            132   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            133   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            134   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            135   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            136   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            137   
0000            138   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            139   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            140   ; bit 1: FL_WE_N
0000            141   ; bit 2: FL_OE_N
0000            142   ; bit 3: FL_CE_N
0000            143   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            144   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            145   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            146   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            147   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            148   
0000              2   ; student#: 74191248
0000              3   
0000              4   L_C equ 46H
0000              5   L_P equ 0CH
0000              6   L_N equ 48H
0000              7   L_H equ 9H
0000              8   L_E equ 6H 
0000              9   L_L equ 47H 
0000             10   L_O equ 40H 
0000             11   L_1 equ 79H
0000             12   L_2 equ 24H
0000             13   L_3 equ 30H 
0000             14   L_4 equ 19H
0000             15   L_7 equ 78H
0000             16   L_8 equ 0H
0000             17   L_9 equ 10H
0000             18   BLANK equ 01111111b
0000             19   
0000             20   org 0
0000 02017D      21            ljmp initialize
0003             22   
0003             23   ; // subroutines
0003             24   
0003             25   sixMSB:
0003 758F78      26            mov HEX5, #L_7
0006 758E19      27            mov HEX4, #L_4
0009 759479      28            mov HEX3, #L_1
000C 759310      29            mov HEX2, #L_9
000F 759279      30            mov HEX1, #L_1
0012 759124      31            mov HEX0, #L_2
0015 22          32            ret
0016             33   
0016             34   sixLSB:
0016 758F79      35            mov HEX5, #L_1
0019 758E10      36            mov HEX4, #L_9
001C 759479      37            mov HEX3, #L_1
001F 759324      38            mov HEX2, #L_2
0022 759219      39            mov HEX1, #L_4
0025 759100      40            mov HEX0, #L_8
0028 22          41            ret
0029             42   
0029             43   Hello:
0029 758F09      44            mov HEX5, #L_H
002C 758E06      45            mov HEX4, #L_E
002F 759447      46            mov HEX3, #L_L
0032 759347      47            mov HEX2, #L_L
0035 759240      48            mov HEX1, #L_O
0038 75917F      49            mov HEX0, #BLANK
003B 22          50            ret
003C             51            
003C             52   CPN312:
003C 758F46      53            mov HEX5, #L_C
003F 758E0C      54            mov HEX4, #L_P
0042 759448      55            mov HEX3, #L_N
0045 759330      56            mov HEX2, #L_3
0048 759279      57            mov HEX1, #L_1
004B 759124      58            mov HEX0, #L_2
004E 22          59            ret
004F             60   
004F             61   clear:
004F 758F7F      62            mov HEX5, #BLANK
0052 758E7F      63            mov HEX4, #BLANK
0055 75947F      64            mov HEX3, #BLANK
0058 75937F      65            mov HEX2, #BLANK
005B 75927F      66            mov HEX1, #BLANK
005E 75917F      67            mov HEX0, #BLANK
0061 22          68            ret
0062             69            
0062             70   wait:
0062 7AB4        71       mov R2, #180  
0064 79FA        72   L3: mov R1, #250 
0066 78FA        73   L2: mov R0, #250
0068 D8FE        74   L1: djnz R0, L1  
006A D9FA        75       djnz R1, L2  
006C DAF6        76       djnz R2, L3
006E 30FB5D      77       jnb KEY.3, jb_main_loop 
0071 22          78            ret
0072             79   
0072             80   ; // conditions
0072             81            
0072             82   show_6MSB:                               ;000
0072 120003      83            lcall sixMSB
0075 020186      84            ljmp main_loop
0078             85            
0078             86   show_2LSB:                               ;001
0078 758F7F      87            mov HEX5, #BLANK
007B 758E7F      88            mov HEX4, #BLANK
007E 75947F      89            mov HEX3, #BLANK
0081 75937F      90            mov HEX2, #BLANK
0084 759219      91            mov HEX1, #L_4
0087 759100      92            mov HEX0, #L_8
008A 020186      93            ljmp main_loop
008D             94            
008D             95   scroll_left:                     ;010
008D 120062      96            lcall wait
0090 AB8F        97            mov R3, HEX5
0092 858E8F      98            mov HEX5, HEX4
0095 85948E      99            mov HEX4, HEX3
0098 859394     100            mov HEX3, HEX2
009B 859293     101            mov HEX2, HEX1
009E 859192     102            mov HEX1, HEX0
00A1 8B91       103            mov HEX0, R3                    
00A3 80E8       104            sjmp scroll_left
00A5            105   
00A5            106   scroll_right:                    ;011
00A5 120062     107            lcall wait
00A8 AB91       108            mov R3, HEX0
00AA 859291     109            mov HEX0, HEX1
00AD 859392     110            mov HEX1, HEX2
00B0 859493     111            mov HEX2, HEX3
00B3 858E94     112            mov HEX3, HEX4
00B6 858F8E     113            mov HEX4, HEX5
00B9 8B8F       114            mov HEX5, R3
00BB 80E8       115            sjmp scroll_right
00BD            116            
00BD            117   blink_6LSB:                              ;100
00BD 12004F     118            lcall clear
00C0 120016     119            lcall sixLSB
00C3 120062     120            lcall wait
00C6 12004F     121            lcall clear
00C9 120062     122            lcall wait
00CC 80EF       123            sjmp blink_6LSB
00CE            124            
00CE            125   jb_main_loop:                    
00CE 020186     126            ljmp main_loop
00D1            127            
00D1            128   sequential_6MSB:                 ;101
00D1 12004F     129            lcall clear
00D4 758F78     130            mov HEX5, #L_7
00D7 120062     131            lcall wait
00DA 758E19     132            mov HEX4, #L_4
00DD 120062     133            lcall wait
00E0 759479     134            mov HEX3, #L_1
00E3 120062     135            lcall wait
00E6 759310     136            mov HEX2, #L_9
00E9 120062     137            lcall wait
00EC 759279     138            mov HEX1, #L_1
00EF 120062     139            lcall wait
00F2 759124     140            mov HEX0, #L_2
00F5 120062     141            lcall wait
00F8 12004F     142            lcall clear
00FB 120062     143            lcall wait
00FE 80D1       144            sjmp sequential_6MSB
0100            145            
0100            146   blink3:                                  ;110
0100 12004F     147            lcall clear
0103 120029     148            lcall Hello     
0106 120062     149            lcall wait
0109 12004F     150            lcall clear
010C 120062     151            lcall wait
010F 120003     152            lcall sixMSB
0112 120062     153            lcall wait
0115 12004F     154            lcall clear
0118 120062     155            lcall wait
011B 12003C     156            lcall CPN312
011E 120062     157            lcall wait
0121 12004F     158            lcall clear
0124 120062     159            lcall wait      
0127 80D7       160            sjmp blink3
0129            161            
0129            162   random:                                  ;111
0129 12004F     163            lcall clear
012C 759124     164            mov HEX0, #L_2  
012F 759279     165            mov HEX1, #L_1  
0132 120062     166            lcall wait
0135 759310     167            mov HEX2, #L_9  
0138 759479     168            mov HEX3, #L_1
013B 120062     169            lcall wait
013E 758E19     170            mov HEX4, #L_4                          
0141 758F78     171            mov HEX5, #L_7
0144 120062     172            lcall wait
0147 12004F     173            lcall clear
014A 120062     174            lcall wait
014D 758F78     175            mov HEX5, #L_7
0150 758E19     176            mov HEX4, #L_4
0153 120062     177            lcall wait
0156 759479     178            mov HEX3, #L_1
0159 759310     179            mov HEX2, #L_9
015C 120062     180            lcall wait
015F 759279     181            mov HEX1, #L_1
0162 759124     182            mov HEX0, #L_2
0165 120062     183            lcall wait
0168 12004F     184            lcall clear
016B 120062     185            lcall wait                      
016E 80B9       186            sjmp random
0170            187   
0170            188   jb6MSB:
0170 020072     189            ljmp show_6MSB
0173            190            
0173            191   jb2LSB:          
0173 020078     192            ljmp show_2LSB
0176            193            
0176            194   jb_blink_6MSB:
0176 0200BD     195            ljmp blink_6LSB
0179            196            
0179            197   set_SWA:
0179 E5E8       198            mov a, swa
017B 800E       199            sjmp events
017D            200                    
017D            201   initialize:
017D 75817F     202            mov SP, #0x7f 
0180 75E800     203            mov LEDRA, #0 
0183 759500     204            mov LEDRB, #0
0186            205            
0186            206   main_loop:
0186 30FBF0     207            jnb KEY.3, set_SWA
0189 80FB       208            sjmp main_loop
018B            209   
018B            210   ; // switch cases
018B            211   
018B            212   events:
018B B40003     213            cjne a, #00000000b, not00000000b
018E 020170     214            ljmp jb6MSB
0191            215            
0191            216   not00000000b:
0191 B40102     217            cjne a, #00000001b, not00000001b
0194 80DD       218            sjmp jb2LSB
0196            219            
0196            220   not00000001b:
0196 B40206     221            cjne a, #00000010b, not00000010b
0199 120003     222            lcall sixMSB
019C 02008D     223            ljmp scroll_left
019F            224   
019F            225   not00000010b:
019F B40306     226            cjne a, #00000011b, not00000011b
01A2 120003     227            lcall sixMSB
01A5 0200A5     228            ljmp scroll_right
01A8            229             
01A8            230   not00000011b:
01A8 B40403     231            cjne a, #00000100b, not00000100b
01AB 0200BD     232            ljmp blink_6LSB
01AE            233   
01AE            234   not00000100b:
01AE B40503     235            cjne a, #00000101b, not00000101b
01B1 0200D1     236            ljmp sequential_6MSB
01B4            237   
01B4            238   not00000101b:
01B4 B40603     239            cjne a, #00000110b, not00000110b
01B7 020100     240            ljmp blink3
01BA            241            
01BA            242   not00000110b:
01BA B40703     243            cjne a, #00000111b, done
01BD 020129     244            ljmp random
01C0            245   
01C0            246   done:
01C0            247   
01C0            248   END
